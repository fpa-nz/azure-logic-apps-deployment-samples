parameters:
- name: project
  type: string
- name: location
  type: string
- name: environment
  type: string

variables: 
  instanceCount: 1
  identifier: sample-function-app
  sampleDirectory: function-app-actions

trigger:
- master

stages:
- stage: BuildFunctionApp
  variables:
    project: '**/$(sampleDirectory)/sample-function/*.csproj'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  jobs:
  - job: BuildFunctionApp
    pool: 
      vmImage: 'windows-2019'
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build Project
      inputs:
        command: 'build'
        projects: '$(project)'
        arguments: '--configuration $(buildConfiguration)'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/$(sampleDirectory)/sample-function/bin/$(buildConfiguration)/netcoreapp2.1/'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - task: PublishPipelineArtifact@1
      inputs:
        path: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'function-app'
- stage: Development
  jobs:
  - job: DeployDevelopmentEnvironment
    variables:
      environment: d
    pool: 
      vmImage: 'windows-2019'
    steps:
    - script: |
        echo ##vso[task.setvariable variable=project]${{ project }}
        echo ##vso[task.setvariable variable=location]${{ location }}
        echo ##vso[task.setvariable variable=environment]${{ environment }}
        echo ##vso[task.setvariable variable=logicAppDeployScript]$(Build.Repository.LocalPath)\$(sampleDirectory)\powershell\logic-app-deploy.ps1

      displayName: Set Dynamic Variable Names

    - powershell: |
        Write-Host "Project: $(project)"
        Write-Host "Location: $(location)"
        Write-Host "LogicAppDeployScript: $(logicAppDeployScript)"

      displayName: Display Dynamic Variable Names

    - task: DownloadPipelineArtifact@2
      displayName: Download Function App
      inputs:
        artifactName: function-app

    - task: AzureFunctionApp@1
      name: DeployFunctionApp
      inputs:
        azureSubscription: 'Azure-DevOps-${{ project }}-${{ environment }}'
        appType: 'functionApp'
        appName: $(functionAppName)
        package: '$(Pipeline.Workspace)/**/$(Build.BuildId).zip'
        deploymentMethod: 'auto'

    - script: |
        echo ##vso[task.setvariable variable=connectorsTemplateFilePath]$(Build.Repository.LocalPath)\$(sampleDirectory)\templates\connectors-template.json
        echo ##vso[task.setvariable variable=logicAppTemplateFilePath]$(Build.Repository.LocalPath)\$(sampleDirectory)\templates\logic-app-template.json
        echo ##vso[task.setvariable variable=logicAppDefinitionPath]$(Build.Repository.LocalPath)\$(sampleDirectory)\templates\logic-app-definition.json
        echo ##vso[task.setvariable variable=logicAppDefinitionParametersFilePath]$(Build.Repository.LocalPath)\$(sampleDirectory)\templates\logic-app-definition-parameters.json

    - task: AzurePowerShell@4
      name: DeployLogicAppSample
      inputs:
        azureSubscription: 'Azure-DevOps-${{ project }}-${{ environment }}'
        ScriptType: 'FilePath'
        ScriptPath: '$(logicAppDeployScript)'
        FailOnStandardError: true
        azurePowerShellVersion: LatestVersion
        ScriptArguments: >-
          -location $(location) 
          -project $(project) 
          -environment $(environment) 
          -instanceCount $(instanceCount) 
          -connectorsTemplateFilePath $(connectorsTemplateFilePath) 
          -logicAppTemplateFilePath $(logicAppTemplateFilePath) 
          -logicAppDefinitionPath $(logicAppDefinitionPath) 
          -logicAppDefinitionParametersFilePath $(logicAppDefinitionParametersFilePath)