variables: 
  sampleDirectory: sample-deployment

trigger:
- master

stages:
- stage: Deployment
  jobs:
  - job: DeployEnvironment
    pool: 
      vmImage: 'vs2017-win2016'
      demands: azureps
    steps:
    - script: |
        echo ##vso[task.setvariable variable=resourceGroupName]$(project)-$(environment)
        echo ##vso[task.setvariable variable=project]$(project)
        echo ##vso[task.setvariable variable=location]$(location)
        echo ##vso[task.setvariable variable=environment]$(environment)
        echo ##vso[task.setvariable variable=deployScript]$(Build.Repository.LocalPath)\$(sampleDirectory)\powershell\bare-test.ps1

      displayName: Set Dynamic Variable Names

    - powershell: |
        Write-Host "ResourceGroupName: $(resourceGroupName)"
        Write-Host "Project: $(project)"
        Write-Host "Location: $(location)"
        Write-Host "DeployScript: $(deployScript)"

      displayName: Display Dynamic Variable Names

    - task: AzurePowerShell@4
      displayName: Removing Lock on Resource Group
      inputs:
        azureSubscription: 'Azure-DevOps-$(system.teamProject)-$(environment)'
        ScriptType: 'inlineScript'
        inline: Remove-AzResourceLock -LockId ((Get-AzResourceLock -ResourceGroupName $(resourceGroupName)).LockId) -Force
        FailOnStandardError: true
        azurePowerShellVersion: LatestVersion
      env:
        AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)

    - task: AzurePowerShell@4
      displayName: Execute Deployment Script
      inputs:
        azureSubscription: 'Azure-DevOps-$(system.teamProject)-$(environment)'
        ScriptType: 'FilePath'
        ScriptPath: '$(deployScript)'
        FailOnStandardError: true
        azurePowerShellVersion: LatestVersion
        ScriptArguments: >-
          -location $(location) 
          -project $(project) 
          -environment $(environment)

    - task: AzurePowerShell@4
      displayName: Removing Lock on Resource Group
      inputs:
        azureSubscription: 'Azure-DevOps-$(system.teamProject)-$(environment)'
        ScriptType: 'inlineScript'
        inline: New-AzResourceLock -LockName Locked - LockLevel CanNotDelete -ResourceGroupName $(resourceGroupName) -Force
        FailOnStandardError: true
        azurePowerShellVersion: LatestVersion
      env:
        AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
